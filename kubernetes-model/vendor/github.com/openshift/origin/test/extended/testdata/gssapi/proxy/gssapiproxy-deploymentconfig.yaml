#
# Copyright (C) 2015 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

kind: "DeploymentConfig"
apiVersion: "v1"
metadata:
  name: "gssapiproxy-server"
  creationTimestamp: null
spec:
  strategy:
    type: "Recreate"
    resources: {}
  triggers:
    -
      type: "ImageChange"
      imageChangeParams:
        automatic: true
        containerNames:
          - "gssapiproxy-server"
        from:
          kind: "ImageStreamTag"
          name: "gssapiproxy:latest"
        lastTriggeredImage: ""
    -
      type: "ConfigChange"
  replicas: 1
  selector:
    name: "gssapiproxy-server"
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: "gssapiproxy-server"
    spec:
      containers:
        -
          name: "gssapiproxy-server"
          image: "gssapiproxy"
          ports:
            -
              containerPort: 80
              protocol: "TCP"
            -
              containerPort: 443
              protocol: "TCP"
            -
              containerPort: 88
              protocol: "TCP"
            -
              containerPort: 88
              protocol: "UDP"
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: "IfNotPresent"
          capabilities: {}
          securityContext:
            capabilities: {}
            privileged: false
            runAsUser: 0
          readinessProbe:
            httpGet:
              path: "/healthz"
              port: 80
            initialDelaySeconds: 15
            timeoutSeconds: 1
      restartPolicy: "Always"
      dnsPolicy: "ClusterFirst"
      serviceAccount: ""
status: {}
