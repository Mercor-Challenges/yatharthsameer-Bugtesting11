/**
 * Copyright (C) 2015 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// +build !ignore_autogenerated_openshift

// This file was autogenerated by defaulter-gen. Do not edit it manually!

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&MasterConfig{}, func(obj interface{}) { SetObjectDefaults_MasterConfig(obj.(*MasterConfig)) })
	scheme.AddTypeDefaultingFunc(&NodeConfig{}, func(obj interface{}) { SetObjectDefaults_NodeConfig(obj.(*NodeConfig)) })
	return nil
}

func SetObjectDefaults_MasterConfig(in *MasterConfig) {
	SetDefaults_MasterConfig(in)
	SetDefaults_ServingInfo(&in.ServingInfo.ServingInfo)
	SetDefaults_EtcdStorageConfig(&in.EtcdStorageConfig)
	if in.KubernetesMasterConfig != nil {
		SetDefaults_KubernetesMasterConfig(in.KubernetesMasterConfig)
	}
	if in.EtcdConfig != nil {
		SetDefaults_ServingInfo(&in.EtcdConfig.ServingInfo)
		SetDefaults_ServingInfo(&in.EtcdConfig.PeerServingInfo)
	}
	if in.OAuthConfig != nil {
		for i := range in.OAuthConfig.IdentityProviders {
			a := &in.OAuthConfig.IdentityProviders[i]
			SetDefaults_IdentityProvider(a)
		}
		SetDefaults_GrantConfig(&in.OAuthConfig.GrantConfig)
	}
	if in.DNSConfig != nil {
		SetDefaults_DNSConfig(in.DNSConfig)
	}
	if in.MasterClients.OpenShiftLoopbackClientConnectionOverrides != nil {
		SetDefaults_ClientConnectionOverrides(in.MasterClients.OpenShiftLoopbackClientConnectionOverrides)
	}
	if in.MasterClients.ExternalKubernetesClientConnectionOverrides != nil {
		SetDefaults_ClientConnectionOverrides(in.MasterClients.ExternalKubernetesClientConnectionOverrides)
	}
	SetDefaults_ImagePolicyConfig(&in.ImagePolicyConfig)
	if in.ProjectConfig.SecurityAllocator != nil {
		SetDefaults_SecurityAllocator(in.ProjectConfig.SecurityAllocator)
	}
}

func SetObjectDefaults_NodeConfig(in *NodeConfig) {
	SetDefaults_NodeConfig(in)
	SetDefaults_ServingInfo(&in.ServingInfo)
	if in.MasterClientConnectionOverrides != nil {
		SetDefaults_ClientConnectionOverrides(in.MasterClientConnectionOverrides)
	}
	SetDefaults_DockerConfig(&in.DockerConfig)
}
