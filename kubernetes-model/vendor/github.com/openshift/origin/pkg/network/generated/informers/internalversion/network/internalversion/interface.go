/**
 * Copyright (C) 2015 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// This file was automatically generated by informer-gen

package internalversion

import (
	internalinterfaces "github.com/openshift/origin/pkg/network/generated/informers/internalversion/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// ClusterNetworks returns a ClusterNetworkInformer.
	ClusterNetworks() ClusterNetworkInformer
	// EgressNetworkPolicies returns a EgressNetworkPolicyInformer.
	EgressNetworkPolicies() EgressNetworkPolicyInformer
	// HostSubnets returns a HostSubnetInformer.
	HostSubnets() HostSubnetInformer
	// NetNamespaces returns a NetNamespaceInformer.
	NetNamespaces() NetNamespaceInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// ClusterNetworks returns a ClusterNetworkInformer.
func (v *version) ClusterNetworks() ClusterNetworkInformer {
	return &clusterNetworkInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// EgressNetworkPolicies returns a EgressNetworkPolicyInformer.
func (v *version) EgressNetworkPolicies() EgressNetworkPolicyInformer {
	return &egressNetworkPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// HostSubnets returns a HostSubnetInformer.
func (v *version) HostSubnets() HostSubnetInformer {
	return &hostSubnetInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// NetNamespaces returns a NetNamespaceInformer.
func (v *version) NetNamespaces() NetNamespaceInformer {
	return &netNamespaceInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
