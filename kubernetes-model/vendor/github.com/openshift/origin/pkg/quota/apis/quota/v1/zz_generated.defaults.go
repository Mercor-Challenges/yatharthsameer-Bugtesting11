/**
 * Copyright (C) 2015 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// +build !ignore_autogenerated_openshift

// This file was autogenerated by defaulter-gen. Do not edit it manually!

package v1

import (
	v1 "github.com/openshift/api/quota/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	core_v1 "k8s.io/kubernetes/pkg/apis/core/v1"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&v1.AppliedClusterResourceQuota{}, func(obj interface{}) {
		SetObjectDefaults_AppliedClusterResourceQuota(obj.(*v1.AppliedClusterResourceQuota))
	})
	scheme.AddTypeDefaultingFunc(&v1.AppliedClusterResourceQuotaList{}, func(obj interface{}) {
		SetObjectDefaults_AppliedClusterResourceQuotaList(obj.(*v1.AppliedClusterResourceQuotaList))
	})
	scheme.AddTypeDefaultingFunc(&v1.ClusterResourceQuota{}, func(obj interface{}) { SetObjectDefaults_ClusterResourceQuota(obj.(*v1.ClusterResourceQuota)) })
	scheme.AddTypeDefaultingFunc(&v1.ClusterResourceQuotaList{}, func(obj interface{}) { SetObjectDefaults_ClusterResourceQuotaList(obj.(*v1.ClusterResourceQuotaList)) })
	return nil
}

func SetObjectDefaults_AppliedClusterResourceQuota(in *v1.AppliedClusterResourceQuota) {
	core_v1.SetDefaults_ResourceList(&in.Spec.Quota.Hard)
	core_v1.SetDefaults_ResourceList(&in.Status.Total.Hard)
	core_v1.SetDefaults_ResourceList(&in.Status.Total.Used)
	for i := range in.Status.Namespaces {
		a := &in.Status.Namespaces[i]
		core_v1.SetDefaults_ResourceList(&a.Status.Hard)
		core_v1.SetDefaults_ResourceList(&a.Status.Used)
	}
}

func SetObjectDefaults_AppliedClusterResourceQuotaList(in *v1.AppliedClusterResourceQuotaList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_AppliedClusterResourceQuota(a)
	}
}

func SetObjectDefaults_ClusterResourceQuota(in *v1.ClusterResourceQuota) {
	core_v1.SetDefaults_ResourceList(&in.Spec.Quota.Hard)
	core_v1.SetDefaults_ResourceList(&in.Status.Total.Hard)
	core_v1.SetDefaults_ResourceList(&in.Status.Total.Used)
	for i := range in.Status.Namespaces {
		a := &in.Status.Namespaces[i]
		core_v1.SetDefaults_ResourceList(&a.Status.Hard)
		core_v1.SetDefaults_ResourceList(&a.Status.Used)
	}
}

func SetObjectDefaults_ClusterResourceQuotaList(in *v1.ClusterResourceQuotaList) {
	for i := range in.Items {
		a := &in.Items[i]
		SetObjectDefaults_ClusterResourceQuota(a)
	}
}
